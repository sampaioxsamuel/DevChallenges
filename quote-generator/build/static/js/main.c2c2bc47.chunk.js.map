{"version":3,"sources":["components/Author.module.css","components/Header.module.css","components/Footer.module.css","components/context/randomContext.js","components/Header.js","components/Footer.js","components/Quotes.js","components/Author.js","App.js","index.js","components/Quotes.module.css"],"names":["module","exports","GlobalContext","createContext","RandomProvider","children","useState","random","setRandom","loading","setLoading","getRandomQuote","a","fetch","getApi","json","toJson","console","log","Provider","value","Header","React","useContext","className","styles","header","icon","Link","onClick","span","Footer","footer","Quotes","color","quotes","animation","quoteText","block","quote","to","quoteAuthor","author","arrow","genre","quoteGenre","Author","id","useParams","setQuotes","useEffect","Garden","getAuthorQuotes","backArrow","map","key","_id","quoteTexts","App","path","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c2c2bc47.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"quotes\":\"Author_quotes__3DEhJ\",\"loading\":\"Author_loading__1Eocs\",\"author\":\"Author_author__y4j49\",\"quoteTexts\":\"Author_quoteTexts__3c61g\",\"backArrow\":\"Author_backArrow__28LUv\",\"animation\":\"Author_animation__VSPKd\",\"animationPage\":\"Author_animationPage__rsvOl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3mObx\",\"icon\":\"Header_icon__2X2E3\",\"random\":\"Header_random__3F9u0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__2NNgL\"};","import React, { createContext, useState } from \"react\";\n\nexport const GlobalContext = createContext();\n\nexport const RandomProvider = ({ children }) => {\n  const [random, setRandom] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const getRandomQuote = async () => {\n    try {\n      setLoading(true);\n      const getApi = await fetch(\n        \"https://quote-garden.herokuapp.com/api/v2/quotes/random\"\n      );\n      const toJson = await getApi.json();\n      setRandom(toJson);\n    } catch (err) {\n      setLoading(true);\n      console.log(err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <GlobalContext.Provider value={{ random, getRandomQuote, loading }}>\n      {children}\n    </GlobalContext.Provider>\n  );\n};\n","import React from \"react\";\nimport RandomIcon from \"@material-ui/icons/Sync\";\nimport styles from \"./Header.module.css\";\nimport { Link } from \"@material-ui/core\";\nimport { GlobalContext } from \"./context/randomContext\";\n\nconst Header = () => {\n  const { random, getRandomQuote } = React.useContext(GlobalContext);\n\n  const handleRandom = () => {\n    getRandomQuote();\n    console.log(random);\n  };\n\n  return (\n    <header className={styles.header}>\n      <div className={styles.icon}>\n        <Link onClick={handleRandom}>\n          <span className={styles.span}>\n            random <RandomIcon className={styles.random} />\n          </span>\n        </Link>\n      </div>\n    </header>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport styles from \"./Footer.module.css\";\n\nconst Footer = () => {\n  return (\n    <footer className={styles.footer}>\n      <span>Samuel Nogueira @ DevChalleges.io</span>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import React, { useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { GlobalContext } from \"./context/randomContext\";\nimport styles from \"./Quotes.module.css\";\nimport { Ellipsis } from \"react-spinners-css\";\n\nconst Quotes = () => {\n  const { random, loading } = useContext(GlobalContext);\n\n  if (loading)\n    return (\n      <div className={styles.loading}>\n        <Ellipsis color=\"#F7DF94\" />\n      </div>\n    );\n  if (random === null) return null;\n\n  return (\n    <section className={styles.quotes + \" \" + styles.animation}>\n      <div className={styles.quoteText}>\n        <span className={styles.block}></span>\n        <p>\"{random.quote.quoteText}\"</p>\n        <Link to={`author/${random.quote.quoteAuthor}`}>\n          <div className={styles.author}>\n            <h2>\n              {random.quote.quoteAuthor} <span className={styles.arrow}>→</span>\n            </h2>\n            <span className={styles.genre}>{random.quote.quoteGenre}</span>\n          </div>\n        </Link>\n      </div>\n    </section>\n  );\n};\n\nexport default Quotes;\n","import React from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport styles from \"./Author.module.css\";\nimport { Ellipsis } from \"react-spinners-css\";\n\nconst Author = () => {\n  const { id } = useParams();\n  const [quotes, setQuotes] = React.useState(null);\n\n  React.useEffect(() => {\n    const getAuthorQuotes = async (id) => {\n      const Garden = await fetch(\n        `https://quote-garden.herokuapp.com/api/v2/authors/${id}`\n      );\n      const toJson = await Garden.json();\n      setQuotes(toJson);\n    };\n\n    getAuthorQuotes(id);\n  }, [id]);\n\n  if (quotes === null)\n    return (\n      <div className={styles.loading}>\n        <Ellipsis color=\"#F7DF94\" />\n      </div>\n    );\n\n  return (\n    <section className={styles.quotes + \" \" + styles.animation}>\n      <div>\n        <Link to=\"/\">\n          <span className={styles.backArrow}>←</span>\n        </Link>\n        <h2 className={styles.author}>{id}</h2>\n        {quotes.quotes.map((quote) => (\n          <p key={quote._id} className={styles.quoteTexts}>\n            {quote.quoteText}\n          </p>\n        ))}\n      </div>\n    </section>\n  );\n};\n\nexport default Author;\n","import React from \"react\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\nimport Quotes from \"./components/Quotes\";\nimport Author from \"./components/Author\";\nimport { RandomProvider } from \"./components/context/randomContext\";\nimport \"./App.css\";\n\nconst App = () => {\n  return (\n    <div className=\"page-container\">\n      <div className=\"content-wrap\">\n        <RandomProvider>\n          <BrowserRouter>\n            <Header />\n            <Routes>\n              <Route path=\"/\" element={<Quotes />} />\n              <Route path=\"/author/:id\" element={<Author />} />\n            </Routes>\n          </BrowserRouter>\n        </RandomProvider>\n      </div>\n      <Footer />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"quotes\":\"Quotes_quotes__1mCob\",\"loading\":\"Quotes_loading__1bjAn\",\"quoteText\":\"Quotes_quoteText__3p9tN\",\"author\":\"Quotes_author__bwn9b\",\"arrow\":\"Quotes_arrow__1xsDr\",\"genre\":\"Quotes_genre__3O4Et\",\"animation\":\"Quotes_animation__1FnD9\",\"animationPage\":\"Quotes_animationPage__23dtT\"};"],"sourceRoot":""}